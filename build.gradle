plugins {
    id 'dev.architectury.loom' version '0.7.4-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.3.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "${project.minecraft_version}-${project.mod_version}"
group = 'io.github.ocelot'
archivesBaseName = 'sonar'

loom {
    // use this if you are using the official mojang mappings
    // and want loom to stop warning you about their license
    silentMojangMappingsLicense()

    runs {
        client {
            source sourceSets.test
            runDir "run/client"
        }
        server {
            source sourceSets.test
            runDir "run/server"
        }
    }
}

dependencies {
    // to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // choose what mappings you want to use here
    // leave this uncommented if you want to use mojang's official mappings
    mappings minecraft.officialMojangMappings()

    // uncomment this if you want to use yarn mappings
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // uncomment this if you want to use mcp mappings
    // mappings "de.oceanlabs.mcp:mcp_${project.mcp_channel}:${project.mcp_mappings}"

    // your forge dependency, this is **required** when using Forge Loom in forge mode!
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    // I shouldn't need this, but it won't build otherwise soooo
    implementation "com.google.code.findbugs:jsr305:3.0.2"
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest {
        attributes(
                'FMLModType': 'LIBRARY'
        )
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                classifier "sources"
                builtBy remapSourcesJar
            }
        }
    }
    repositories {
        if (project.hasProperty("jacksonMavenUser") && project.hasProperty("jacksonMavenPass")) {
            maven {
                url "https://maven.jaackson.me"
                credentials {
                    username = project.properties.jacksonMavenUser
                    password = project.properties.jacksonMavenPass
                }
            }
        }
    }
}
